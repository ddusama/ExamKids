{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\";\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar homeScreenName = 'ProfileCard';\nvar filesScreenName = 'List';\nvar profileScreenName = 'Name';\nvar profileScreenName1 = 'ChatGPT';\nvar Navigation = function Navigation() {\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: homeScreenName,\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          var rn = route.name;\n          if (rn === homeScreenName) {\n            iconName = focused ? 'home' : 'home-outline';\n          } else if (rn === filesScreenName) {\n            iconName = focused ? 'document' : 'document-outline';\n          } else if (rn === profileScreenName) {\n            iconName = focused ? 'person' : 'person-outline';\n          } else if (rn === profileScreenName1) {\n            iconName = focused ? 'person' : 'person-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        }\n      };\n    },\n    tabBarOtions: {\n      activeTintColor: 'green',\n      inactiveTintColor: 'grey',\n      labelStyle: {\n        paddingBottom: 10,\n        fontSize: 10\n      },\n      style: {\n        padding: 10,\n        height: 70\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: filesScreenName,\n      component: ProfileCard\n    }), _jsx(Tab.Screen, {\n      name: homeScreenName,\n      component: List\n    }), _jsx(Tab.Screen, {\n      name: profileScreenName,\n      component: Name\n    }), _jsx(Tab.Screen, {\n      name: profileScreenName1,\n      component: ChatGPT\n    })]\n  });\n};\nexport default Navigation;","map":{"version":3,"names":["createBottomTabNavigator","Ionicons","ProfileCard","List","Name","ChatGPT","jsx","_jsx","jsxs","_jsxs","Tab","homeScreenName","filesScreenName","profileScreenName","profileScreenName1","Navigation","Navigator","initialRouteName","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","rn","name","tabBarOtions","activeTintColor","inactiveTintColor","labelStyle","paddingBottom","fontSize","style","padding","height","children","Screen","component"],"sources":["C:/Users/Dani/ProgramacionMovil/ExamKids/frontend/examkids/src/Navigation.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\"\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\n\nconst Tab = createBottomTabNavigator();\n\nconst homeScreenName = 'ProfileCard';\nconst filesScreenName = 'List';\nconst profileScreenName = 'Name';\nconst profileScreenName1 = 'ChatGPT';\n\nconst Navigation = () => {\n  return (\n      <Tab.Navigator\n        initialRouteName={homeScreenName}\n        screenOptions={({route}) => ({\n          tabBarIcon: ({focused, color, size}) => {\n            let iconName;\n            let rn = route.name;\n\n            if(rn === homeScreenName){\n              iconName = focused ? 'home' : 'home-outline';\n            }else if (rn === filesScreenName){\n              iconName = focused ? 'document' : 'document-outline';\n            }else if (rn === profileScreenName){\n              iconName = focused ? 'person' : 'person-outline';\n            }else if (rn === profileScreenName1){\n              iconName = focused ? 'person' : 'person-outline';\n            }\n\n            return <Ionicons name={iconName} size={size} color={color}/>\n          },\n        })}\n        \n        tabBarOtions={{\n          activeTintColor: 'green',\n          inactiveTintColor: 'grey',\n          labelStyle: {\n            paddingBottom: 10,\n            fontSize: 10\n          },\n          style: {\n            padding: 10,\n            height: 70\n          }\n        }}\n      \n      >\n\n        <Tab.Screen name={filesScreenName} component={ProfileCard} />\n        <Tab.Screen name={homeScreenName} component={List} />\n        <Tab.Screen name={profileScreenName} component={Name} />\n        <Tab.Screen name={profileScreenName1} component={ChatGPT} />\n      \n      </Tab.Navigator>\n  );\n};\n\nexport default Navigation\n"],"mappings":"AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,WAAW;AAClB,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,OAAOC,OAAO;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,GAAG,GAAGV,wBAAwB,CAAC,CAAC;AAEtC,IAAMW,cAAc,GAAG,aAAa;AACpC,IAAMC,eAAe,GAAG,MAAM;AAC9B,IAAMC,iBAAiB,GAAG,MAAM;AAChC,IAAMC,kBAAkB,GAAG,SAAS;AAEpC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,OACIN,KAAA,CAACC,GAAG,CAACM,SAAS;IACZC,gBAAgB,EAAEN,cAAe;IACjCO,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAEC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAA,OAAO;QAC3BC,UAAU,EAAE,SAAAA,WAAAC,KAAA,EAA4B;UAAA,IAA1BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UAChC,IAAIC,QAAQ;UACZ,IAAIC,EAAE,GAAGP,KAAK,CAACQ,IAAI;UAEnB,IAAGD,EAAE,KAAKhB,cAAc,EAAC;YACvBe,QAAQ,GAAGH,OAAO,GAAG,MAAM,GAAG,cAAc;UAC9C,CAAC,MAAK,IAAII,EAAE,KAAKf,eAAe,EAAC;YAC/Bc,QAAQ,GAAGH,OAAO,GAAG,UAAU,GAAG,kBAAkB;UACtD,CAAC,MAAK,IAAII,EAAE,KAAKd,iBAAiB,EAAC;YACjCa,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UAClD,CAAC,MAAK,IAAII,EAAE,KAAKb,kBAAkB,EAAC;YAClCY,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;UAClD;UAEA,OAAOhB,IAAA,CAACN,QAAQ;YAAC2B,IAAI,EAAEF,QAAS;YAACD,IAAI,EAAEA,IAAK;YAACD,KAAK,EAAEA;UAAM,CAAC,CAAC;QAC9D;MACF,CAAC;IAAA,CAAE;IAEHK,YAAY,EAAE;MACZC,eAAe,EAAE,OAAO;MACxBC,iBAAiB,EAAE,MAAM;MACzBC,UAAU,EAAE;QACVC,aAAa,EAAE,EAAE;QACjBC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,EAAE;QACXC,MAAM,EAAE;MACV;IACF,CAAE;IAAAC,QAAA,GAIF/B,IAAA,CAACG,GAAG,CAAC6B,MAAM;MAACX,IAAI,EAAEhB,eAAgB;MAAC4B,SAAS,EAAEtC;IAAY,CAAE,CAAC,EAC7DK,IAAA,CAACG,GAAG,CAAC6B,MAAM;MAACX,IAAI,EAAEjB,cAAe;MAAC6B,SAAS,EAAErC;IAAK,CAAE,CAAC,EACrDI,IAAA,CAACG,GAAG,CAAC6B,MAAM;MAACX,IAAI,EAAEf,iBAAkB;MAAC2B,SAAS,EAAEpC;IAAK,CAAE,CAAC,EACxDG,IAAA,CAACG,GAAG,CAAC6B,MAAM;MAACX,IAAI,EAAEd,kBAAmB;MAAC0B,SAAS,EAAEnC;IAAQ,CAAE,CAAC;EAAA,CAE/C,CAAC;AAEtB,CAAC;AAED,eAAeU,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}