{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\";\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar _useState = useState('gray'),\n  _useState2 = _slicedToArray(_useState, 2),\n  buttonColor = _useState2[0],\n  setButtonColor = _useState2[1];\nvar _useState3 = useState('gray'),\n  _useState4 = _slicedToArray(_useState3, 2),\n  textColor = _useState4[0],\n  setTextColor = _useState4[1];\nvar handleButtonClick = function handleButtonClick() {\n  setButtonColor('green');\n  setTextColor('green');\n};\nexport default function Navigation() {\n  return _jsxs(Tab.Navigator, {\n    children: [_jsx(Tab.Screen, {\n      name: \" \",\n      style: [styles.button, {\n        backgroundColor: buttonColor\n      }],\n      component: ProfileCard,\n      options: {\n        tabBarLabel: \"Diagnóstico\",\n        tabBarIcon: function tabBarIcon(color, size) {\n          return _jsx(MaterialCommunityIcons, {\n            onPress: handleButtonClick,\n            name: \"hospital-box-outline\",\n            size: size,\n            style: [styles.buttonText, {\n              color: textColor\n            }]\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"list\",\n      component: List,\n      options: {\n        tabBarLabel: \"Información\",\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"information\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"name\",\n      component: Name,\n      options: {\n        tabBarLabel: \"Estadísticas\",\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"chart-bar\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"chatgpt\",\n      component: ChatGPT,\n      options: {\n        tabBarLabel: \"Configuración\",\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"account-cog\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  button: {\n    flexDirection: 'row',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    marginLeft: 5,\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["createBottomTabNavigator","ProfileCard","MaterialCommunityIcons","List","Name","ChatGPT","jsx","_jsx","jsxs","_jsxs","Tab","_useState","useState","_useState2","_slicedToArray","buttonColor","setButtonColor","_useState3","_useState4","textColor","setTextColor","handleButtonClick","Navigation","Navigator","children","Screen","name","style","styles","button","backgroundColor","component","options","tabBarLabel","tabBarIcon","color","size","onPress","buttonText","_ref","_ref2","_ref3","StyleSheet","create","flexDirection","paddingVertical","paddingHorizontal","borderRadius","alignItems","marginLeft","fontSize"],"sources":["C:/Users/Dani/ProgramacionMovil/ExamKids/frontend/examkids/src/Navigation.js"],"sourcesContent":["import { StyleSheet } from \"react-native\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\"\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\"\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\n\nconst Tab = createBottomTabNavigator();\nconst [buttonColor, setButtonColor] = useState('gray');\nconst [textColor, setTextColor] = useState('gray');\n\nconst handleButtonClick = () => {\n    // Cambiar el color del botón y el texto al hacer clic\n    setButtonColor('green');\n    setTextColor('green');\n};\n\n\nexport default function Navigation() {\n    return (\n        <Tab.Navigator>\n            <Tab.Screen name=\" \" style={[styles.button, { backgroundColor: buttonColor }]} component={ProfileCard} options={{\n                \n                tabBarLabel: \"Diagnóstico\",\n                tabBarIcon: (color, size) => {\n                    return <MaterialCommunityIcons onPress={handleButtonClick} name=\"hospital-box-outline\" size={size}\n                    style={[styles.buttonText, { color: textColor }]} />\n                }\n            }} />\n            <Tab.Screen name=\"list\" component={List} options={{\n                tabBarLabel: \"Información\",\n                tabBarIcon: ({ color, size }) => {\n                    return <MaterialCommunityIcons name=\"information\" color={color} size={size} />\n                }\n            }} />\n            <Tab.Screen name=\"name\" component={Name} options={{\n                tabBarLabel: \"Estadísticas\",\n                tabBarIcon: ({ color, size }) => {\n                    return <MaterialCommunityIcons name=\"chart-bar\" color={color} size={size} />\n                }\n            }} />\n            <Tab.Screen name=\"chatgpt\" component={ChatGPT} options={{\n                tabBarLabel: \"Configuración\",\n                tabBarIcon: ({ color, size }) => {\n                    return <MaterialCommunityIcons name=\"account-cog\" color={color} size={size} />\n                }\n            }} />\n\n        </Tab.Navigator>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        flexDirection: 'row',\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 5,\n        alignItems: 'center',\n      },\n      buttonText: {\n        marginLeft: 5,\n        fontSize: 16,\n      },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}