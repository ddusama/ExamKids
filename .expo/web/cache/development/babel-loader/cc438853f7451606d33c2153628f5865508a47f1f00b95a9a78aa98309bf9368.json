{"ast":null,"code":"export var validateCedula = function validateCedula(ci) {\n  ci = ci.trim();\n  if (typeof ci === 'number') {\n    ci = ci.toString();\n  }\n  if (typeof ci !== 'string') {\n    throw new Error('El número de cédula debe ser un string');\n  }\n  if (!isNumber(ci)) return false;\n  if (ci.length !== 10) return false;\n  var code = parseInt(ci.substring(0, 2));\n  if (code <= 0 || code >= 25 && code !== 30) return false;\n  var digits = ci.split('').map(Number);\n  var verifier = digits.pop();\n  var calculated = digits.map(function (d, i) {\n    var computed = (i + 1) % 2 === 0 ? d : d * 2;\n    return computed <= 9 ? computed : computed - 9;\n  }).reduce(function (p, c, i) {\n    return p + c;\n  }, 0) % 10;\n  return calculated === 0 ? 0 : 10 - calculated === verifier;\n};\nfunction isNumber(value) {\n  return !isNaN(parseInt(value));\n}","map":{"version":3,"names":["validateCedula","ci","trim","toString","Error","isNumber","length","code","parseInt","substring","digits","split","map","Number","verifier","pop","calculated","d","i","computed","reduce","p","c","value","isNaN"],"sources":["/Users/pablocaiza/Documents/derma-app/frontend-examkids/src/utils/validators.js"],"sourcesContent":["export const validateCedula = (ci) => {\n    ci = ci.trim()\n    if (typeof ci === 'number') {\n        ci = ci.toString();\n    }\n    if (typeof ci !== 'string') {\n        throw new Error('El número de cédula debe ser un string');\n    }\n    if (!isNumber(ci)) return false;\n    if (ci.length !== 10) return false;\n\n    const code = parseInt(ci.substring(0, 2));\n    if (code <= 0 || (code >= 25 && code !== 30)) return false;\n\n    const digits = ci.split('').map(Number);\n    const verifier = digits.pop();\n    const calculated = digits.map((d, i) => {\n        let computed = (i + 1) % 2 === 0 ? d : d * 2\n        return computed <= 9 ? computed : computed - 9\n    }).reduce((p, c, i) => p + c, 0) % 10\n    return calculated === 0 ? 0 : 10 - calculated === verifier;\n}\n\nfunction isNumber(value) {\n    return !isNaN(parseInt(value));\n}\n"],"mappings":"AAAA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,EAAE,EAAK;EAClCA,EAAE,GAAGA,EAAE,CAACC,IAAI,CAAC,CAAC;EACd,IAAI,OAAOD,EAAE,KAAK,QAAQ,EAAE;IACxBA,EAAE,GAAGA,EAAE,CAACE,QAAQ,CAAC,CAAC;EACtB;EACA,IAAI,OAAOF,EAAE,KAAK,QAAQ,EAAE;IACxB,MAAM,IAAIG,KAAK,CAAC,wCAAwC,CAAC;EAC7D;EACA,IAAI,CAACC,QAAQ,CAACJ,EAAE,CAAC,EAAE,OAAO,KAAK;EAC/B,IAAIA,EAAE,CAACK,MAAM,KAAK,EAAE,EAAE,OAAO,KAAK;EAElC,IAAMC,IAAI,GAAGC,QAAQ,CAACP,EAAE,CAACQ,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACzC,IAAIF,IAAI,IAAI,CAAC,IAAKA,IAAI,IAAI,EAAE,IAAIA,IAAI,KAAK,EAAG,EAAE,OAAO,KAAK;EAE1D,IAAMG,MAAM,GAAGT,EAAE,CAACU,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;EACvC,IAAMC,QAAQ,GAAGJ,MAAM,CAACK,GAAG,CAAC,CAAC;EAC7B,IAAMC,UAAU,GAAGN,MAAM,CAACE,GAAG,CAAC,UAACK,CAAC,EAAEC,CAAC,EAAK;IACpC,IAAIC,QAAQ,GAAG,CAACD,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAGD,CAAC,GAAGA,CAAC,GAAG,CAAC;IAC5C,OAAOE,QAAQ,IAAI,CAAC,GAAGA,QAAQ,GAAGA,QAAQ,GAAG,CAAC;EAClD,CAAC,CAAC,CAACC,MAAM,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAEJ,CAAC;IAAA,OAAKG,CAAC,GAAGC,CAAC;EAAA,GAAE,CAAC,CAAC,GAAG,EAAE;EACrC,OAAON,UAAU,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,GAAGA,UAAU,KAAKF,QAAQ;AAC9D,CAAC;AAED,SAAST,QAAQA,CAACkB,KAAK,EAAE;EACrB,OAAO,CAACC,KAAK,CAAChB,QAAQ,CAACe,KAAK,CAAC,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}