{"ast":null,"code":"import React, { useContext, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { Formik, validateYupSchema } from \"formik\";\nimport * as yup from \"yup\";\nimport { Input } from \"@rneui/themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginSchema = yup.object({\n  email: yup.string().email('Invalid Email').required('Email is required'),\n  password: yup.string().min(8, 'Password is too short').required('Password is required')\n});\nvar Login = function Login() {\n  var logo = \"https://i.postimg.cc/Zn9ScShf/logo.png\";\n  var navigation = useNavigation();\n  var ingresar = _jsx(Icon, {\n    name: \"arrow-right\",\n    size: 20,\n    color: \"white\"\n  });\n  var _useContext = useContext(AuthContext),\n    login = _useContext.login;\n  var handleSignIn = function handleSignIn(values) {\n    login(values);\n  };\n  var handleSignUp = function handleSignUp() {\n    navigation.navigate(\"Sing_up\");\n  };\n  return _jsx(KeyboardAvoidingView, {\n    style: {\n      flex: 1\n    },\n    behavior: Platform.OS === \"ios\" ? \"padding\" : \"height\",\n    children: _jsx(SafeAreaView, {\n      style: styles.safeArea,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.text,\n            children: \"BIENVENIDOS\"\n          }), _jsx(Image, {\n            source: {\n              uri: logo\n            },\n            style: styles.logo\n          })]\n        }), _jsx(Formik, {\n          initialValues: {\n            email: '',\n            password: ''\n          },\n          onSubmit: function onSubmit(values, actions) {\n            actions.resetForm();\n            handleSignIn(values);\n          },\n          validationSchema: loginSchema,\n          children: function children(_ref) {\n            var handleChange = _ref.handleChange,\n              values = _ref.values,\n              handleSubmit = _ref.handleSubmit,\n              handleBlur = _ref.handleBlur,\n              errors = _ref.errors,\n              touched = _ref.touched;\n            return _jsxs(View, {\n              children: [_jsx(Input, {\n                placeholder: 'Email',\n                leftIcon: {\n                  type: 'font-awesome',\n                  name: 'envelope'\n                },\n                value: values.email,\n                onChangeText: handleChange('email'),\n                onBlur: handleBlur('email'),\n                errorMessage: touched.email && errors.email\n              }), _jsx(Input, {\n                placeholder: 'Password',\n                leftIcon: {\n                  type: 'font-awesome',\n                  name: 'envelope'\n                },\n                value: values.password,\n                onChangeText: handleChange('password'),\n                onBlur: handleBlur('password'),\n                errorMessage: touched.password && errors.password,\n                secureTextEntry: true,\n                textContentType: \"password\"\n              }), _jsx(TouchableOpacity, {\n                style: styles.loginButton,\n                onPress: handleSubmit,\n                children: _jsxs(Text, {\n                  style: styles.loginButtonText,\n                  children: [ingresar, \" Ingresar\"]\n                })\n              })]\n            });\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: handleSignUp,\n          children: _jsx(Text, {\n            style: styles.signupLink,\n            children: \"Crear una cuenta\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 35,\n    marginLeft: 25,\n    marginRight: 25,\n    marginBottom: 35,\n    borderRadius: 10\n  },\n  user: {\n    color: \"black\",\n    fontSize: 15,\n    marginTop: -90,\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 3,\n    borderColor: \"#76768e\",\n    backgroundColor: \"white\"\n  },\n  password: {\n    color: \"black\",\n    fontSize: 15,\n    marginTop: 10,\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 1,\n    borderRadius: 3,\n    borderColor: \"#76768e\",\n    backgroundColor: \"white\"\n  },\n  text: {\n    marginTop: 25,\n    color: 'black',\n    fontSize: 20,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  logo: {\n    width: 200,\n    height: \"50%\"\n  },\n  safeArea: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  signupLink: {\n    color: 'black',\n    textDecorationLine: 'underline',\n    textAlign: 'center',\n    fontSize: 19,\n    marginTop: 40,\n    marginBottom: 20\n  },\n  loginButton: {\n    backgroundColor: \"#fd7858\",\n    borderRadius: 5,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    marginTop: 10\n  },\n  loginButtonText: {\n    color: 'white',\n    fontSize: 18,\n    textAlign: 'center'\n  },\n  errorText: {\n    color: 'crimson',\n    fontWeight: 'bold',\n    marginBottom: 10,\n    marginTop: 6,\n    textAlign: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useContext","useState","Image","StyleSheet","View","Text","TextInput","TouchableOpacity","SafeAreaView","KeyboardAvoidingView","Platform","useNavigation","Icon","AuthContext","Formik","validateYupSchema","yup","Input","jsx","_jsx","jsxs","_jsxs","loginSchema","object","email","string","required","password","min","Login","logo","navigation","ingresar","name","size","color","_useContext","login","handleSignIn","values","handleSignUp","navigate","style","flex","behavior","OS","children","styles","safeArea","container","text","source","uri","initialValues","onSubmit","actions","resetForm","validationSchema","_ref","handleChange","handleSubmit","handleBlur","errors","touched","placeholder","leftIcon","type","value","onChangeText","onBlur","errorMessage","secureTextEntry","textContentType","loginButton","onPress","loginButtonText","signupLink","create","alignItems","marginTop","marginLeft","marginRight","marginBottom","borderRadius","user","fontSize","padding","borderWidth","borderColor","backgroundColor","textAlign","fontWeight","width","height","textDecorationLine","paddingVertical","paddingHorizontal","errorText"],"sources":["/Users/pablocaiza/Documents/derma-app/frontend-examkids/src/components/login/Login.js"],"sourcesContent":["import React, {useContext, useState} from \"react\";\nimport {\n    Image, StyleSheet, View, Text, TextInput, TouchableOpacity, SafeAreaView, KeyboardAvoidingView,\n    Platform\n} from 'react-native';\nimport {useNavigation} from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport {AuthContext} from \"../../context/AuthContext\";\nimport {Formik, validateYupSchema} from \"formik\";\nimport * as yup from \"yup\"\nimport {Input} from \"@rneui/themed\";\n\n\nconst loginSchema = yup.object({\n    email: yup.string()\n        .email('Invalid Email')\n        .required('Email is required'),\n    password: yup.string()\n        .min(8, 'Password is too short')\n        .required('Password is required')\n})\n\nconst Login = () => {\n    const logo = \"https://i.postimg.cc/Zn9ScShf/logo.png\";\n    const navigation = useNavigation();\n    const ingresar = <Icon name='arrow-right' size={20} color=\"white\"/>;\n    const {login} = useContext(AuthContext)\n\n    const handleSignIn = (values) => {\n        login(values)\n    };\n\n    const handleSignUp = () => {\n        navigation.navigate(\"Sing_up\");\n    };\n\n    return (\n        <KeyboardAvoidingView\n            style={{flex: 1}}\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"} // ajustar automÃ¡ticamente para el teclado en iOS, desplazar en Android\n        >\n            <SafeAreaView style={styles.safeArea}>\n                <View style={styles.container}>\n                    <View>\n                        <Text style={styles.text}>BIENVENIDOS</Text>\n                        <Image source={{uri: logo}} style={styles.logo}/>\n                    </View>\n                    <Formik initialValues={{email: '', password: ''}} onSubmit={(values, actions) => {\n                        actions.resetForm()\n                        handleSignIn(values)\n                    }} validationSchema={loginSchema}>\n\n                        {({\n                              handleChange, values,\n                              handleSubmit, handleBlur,\n                              errors, touched\n                          }) => (\n                            <View>\n\n                                <Input placeholder={'Email'}\n                                       leftIcon={{ type: 'font-awesome', name: 'envelope' }}\n                                       value={values.email}\n                                       onChangeText={handleChange('email')}\n                                       onBlur={handleBlur('email')}\n                                       errorMessage={touched.email && errors.email}\n                                />\n                                <Input placeholder={'Password'}\n                                       leftIcon={{ type: 'font-awesome', name: 'envelope' }}\n                                       value={values.password}\n                                       onChangeText={handleChange('password')}\n                                       onBlur={handleBlur('password')}\n                                       errorMessage={touched.password && errors.password}\n                                       secureTextEntry={true}\n                                       textContentType=\"password\"\n                                />\n                                \n                                <TouchableOpacity style={styles.loginButton} onPress={handleSubmit}>\n                                    <Text style={styles.loginButtonText}>{ingresar} Ingresar</Text>\n                                </TouchableOpacity>\n                            </View>\n                        )}\n                    </Formik>\n                    <TouchableOpacity onPress={handleSignUp}>\n                        <Text style={styles.signupLink}>Crear una cuenta</Text>\n                    </TouchableOpacity>\n                </View>\n            </SafeAreaView>\n        </KeyboardAvoidingView>\n    )\n        ;\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center',\n        // backgroundColor: '#DEE1E6',\n        marginTop: 35,\n        marginLeft: 25,\n        marginRight: 25,\n        marginBottom: 35,\n        borderRadius: 10\n    },\n    user: {\n        color: \"black\",\n        fontSize: 15,\n        marginTop: -90,\n        marginBottom: 10,\n        padding: 10,\n        borderWidth: 1,\n        borderRadius: 3,\n        borderColor: \"#76768e\",\n        backgroundColor: \"white\",\n    },\n    password: {\n        color: \"black\",\n        fontSize: 15,\n        marginTop: 10,\n        marginBottom: 10,\n        padding: 10,\n        borderWidth: 1,\n        borderRadius: 3,\n        borderColor: \"#76768e\",\n        backgroundColor: \"white\",\n    },\n    text: {\n        marginTop: 25,\n        color: 'black',\n        fontSize: 20,\n        textAlign: 'center',\n        fontWeight: 'bold',\n    },\n    logo: {\n        width: 200,\n        height: \"50%\",\n    },\n    safeArea: {\n        flex: 1, // Cambia el flex a 1 para ocupar todo el espacio\n        backgroundColor: 'white',\n    },\n    signupLink: {\n        color: 'black',\n        textDecorationLine: 'underline',\n        textAlign: 'center',\n        fontSize: 19,\n        marginTop: 40,\n        marginBottom: 20,\n    },\n    loginButton: {\n        backgroundColor: \"#fd7858\",\n        borderRadius: 5,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        marginTop: 10,\n    },\n    loginButtonText: {\n        color: 'white',\n        fontSize: 18,\n        textAlign: 'center',\n    },\n    errorText: {\n        color: 'crimson',\n        fontWeight: 'bold',\n        marginBottom: 10,\n        marginTop: 6,\n        textAlign: 'center'\n    }\n\n})\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}