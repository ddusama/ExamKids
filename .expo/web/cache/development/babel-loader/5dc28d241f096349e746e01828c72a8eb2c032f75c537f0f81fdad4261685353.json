{"ast":null,"code":"import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Statistics from \"./components/stat/Statistics\";\nimport Diagnostic from \"./components/diag/Diagnostic\";\nimport Information from \"./components/inf/Information\";\nimport Configuration from \"./components/conf/Configuration\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: {\n      tabBarActiveTintColor: '#fd7858',\n      tabBarInactiveTintColor: '#76768e',\n      tabBarStyle: {\n        backgroundColor: \"#DEE1E6\"\n      },\n      style: {\n        backgroundColor: '#blue'\n      }\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"ExamKids \",\n      component: Diagnostic,\n      options: {\n        tabBarLabel: 'Diagnóstico',\n        tabBarIcon: function tabBarIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"hospital-box-outline\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"list\",\n      component: Information,\n      options: {\n        tabBarLabel: 'Información',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"information\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"name\",\n      component: Statistics,\n      options: {\n        tabBarLabel: 'Estadísticas',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"chart-bar\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"chatgpt\",\n      component: Configuration,\n      options: {\n        tabBarLabel: 'Configuración',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(MaterialCommunityIcons, {\n            name: \"account-cog\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  fond: {\n    backgroundColor: \"blue\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["createBottomTabNavigator","MaterialCommunityIcons","Statistics","Diagnostic","Information","Configuration","StyleSheet","View","jsx","_jsx","jsxs","_jsxs","Tab","Navigation","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","style","children","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","_ref3","_ref4","styles","create","fond","width"],"sources":["C:/Users/Dani/ProgramacionMovil/ExamKids/frontend/examkids/src/Navigation.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\"\nimport Statistics from \"./components/stat/Statistics\";\nimport Diagnostic from \"./components/diag/Diagnostic\";\nimport Information from \"./components/inf/Information\"\nimport Configuration from \"./components/conf/Configuration\";\nimport { StyleSheet, View } from 'react-native';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Navigation() {\n    return (\n        \n        <Tab.Navigator \n            screenOptions={{\n                tabBarActiveTintColor: '#fd7858', // Color del ícono y etiqueta de la pestaña activa\n                tabBarInactiveTintColor: '#76768e', // Color del ícono y etiqueta de la pestaña inactiva\n                tabBarStyle: { backgroundColor: \"#DEE1E6\" },  \n                style: { backgroundColor: '#blue' },             \n            }}\n        >\n            <Tab.Screen\n                name=\"ExamKids \"\n                component={Diagnostic}\n                options={{\n                    tabBarLabel: 'Diagnóstico',\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name=\"hospital-box-outline\" color={color} size={size} />\n                    ),\n                }}\n            />\n            <Tab.Screen\n                name=\"list\"\n                component={Information}\n                options={{\n                    tabBarLabel: 'Información',\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name=\"information\" color={color} size={size} />\n                    ),\n                }}\n            />\n            <Tab.Screen\n                name=\"name\"\n                component={Statistics}\n                options={{\n                    tabBarLabel: 'Estadísticas',\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name=\"chart-bar\" color={color} size={size} />\n                    ),\n                }}\n            />\n            <Tab.Screen\n                name=\"chatgpt\"\n                component={Configuration}\n                options={{\n                    tabBarLabel: 'Configuración',\n                    tabBarIcon: ({ color, size }) => (\n                        <MaterialCommunityIcons name=\"account-cog\" color={color} size={size} />\n                    ),\n                }}\n            />\n        </Tab.Navigator>\n      \n    );\n}\n\nconst styles = StyleSheet.create({\n    fond:{\n        backgroundColor:\"blue\",\n        width:\"100%\"\n    }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}