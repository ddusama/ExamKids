{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport { withTiming } from \"../../animation\";\nimport { LayoutAnimationType, SharedTransitionType } from \"../animationBuilder/commonTypes\";\nimport { configureLayoutAnimations } from \"../../core\";\nimport { ProgressTransitionManager } from \"./ProgressTransitionManager\";\nvar supportedProps = ['width', 'height', 'originX', 'originY', 'transform', 'borderRadius'];\nexport var SharedTransition = function () {\n  function SharedTransition() {\n    _classCallCheck(this, SharedTransition);\n    _defineProperty(this, \"_customAnimationFactory\", null);\n    _defineProperty(this, \"_animation\", null);\n    _defineProperty(this, \"_transitionDuration\", 500);\n    _defineProperty(this, \"_customProgressAnimation\", undefined);\n    _defineProperty(this, \"_progressAnimation\", undefined);\n    _defineProperty(this, \"_defaultTransitionType\", undefined);\n  }\n  _createClass(SharedTransition, [{\n    key: \"custom\",\n    value: function custom(customAnimationFactory) {\n      this._customAnimationFactory = customAnimationFactory;\n      return this;\n    }\n  }, {\n    key: \"progressAnimation\",\n    value: function progressAnimation(progressAnimationCallback) {\n      this._customProgressAnimation = function (viewTag, values, progress) {\n        'worklet';\n\n        var newStyles = progressAnimationCallback(values, progress);\n        _notifyAboutProgress(viewTag, newStyles, true);\n      };\n      return this;\n    }\n  }, {\n    key: \"duration\",\n    value: function duration(_duration) {\n      this._transitionDuration = _duration;\n      return this;\n    }\n  }, {\n    key: \"defaultTransitionType\",\n    value: function defaultTransitionType(transitionType) {\n      this._defaultTransitionType = transitionType;\n      return this;\n    }\n  }, {\n    key: \"registerTransition\",\n    value: function registerTransition(viewTag, sharedTransitionTag) {\n      var transitionAnimation = this.getTransitionAnimation();\n      var progressAnimation = this.getProgressAnimation();\n      if (!this._defaultTransitionType) {\n        if (this._customAnimationFactory && !this._customProgressAnimation) {\n          this._defaultTransitionType = SharedTransitionType.ANIMATION;\n        } else {\n          this._defaultTransitionType = SharedTransitionType.PROGRESS_ANIMATION;\n        }\n      }\n      var layoutAnimationType = this._defaultTransitionType === SharedTransitionType.ANIMATION ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n      configureLayoutAnimations(viewTag, layoutAnimationType, transitionAnimation, sharedTransitionTag);\n      SharedTransition._progressTransitionManager.addProgressAnimation(viewTag, progressAnimation);\n    }\n  }, {\n    key: \"unregisterTransition\",\n    value: function unregisterTransition(viewTag) {\n      SharedTransition._progressTransitionManager.removeProgressAnimation(viewTag);\n    }\n  }, {\n    key: \"getTransitionAnimation\",\n    value: function getTransitionAnimation() {\n      if (!this._animation) {\n        this.buildAnimation();\n      }\n      return this._animation;\n    }\n  }, {\n    key: \"getProgressAnimation\",\n    value: function getProgressAnimation() {\n      if (!this._progressAnimation) {\n        this.buildProgressAnimation();\n      }\n      return this._progressAnimation;\n    }\n  }, {\n    key: \"buildAnimation\",\n    value: function buildAnimation() {\n      var animationFactory = this._customAnimationFactory;\n      var transitionDuration = this._transitionDuration;\n      this._animation = function (values) {\n        'worklet';\n\n        var animations = {};\n        var initialValues = {};\n        if (animationFactory) {\n          animations = animationFactory(values);\n          for (var key in animations) {\n            if (!supportedProps.includes(key)) {\n              throw Error(\"The prop '\" + key + \"' is not supported yet.\");\n            }\n          }\n        } else {\n          for (var propName of supportedProps) {\n            if (propName === 'transform') {\n              var matrix = values.targetTransformMatrix;\n              animations.transformMatrix = withTiming(matrix, {\n                duration: transitionDuration\n              });\n            } else {\n              var keyToTargetValue = 'target' + propName.charAt(0).toUpperCase() + propName.slice(1);\n              animations[propName] = withTiming(values[keyToTargetValue], {\n                duration: transitionDuration\n              });\n            }\n          }\n        }\n        for (var _propName in animations) {\n          if (_propName === 'transform') {\n            initialValues.transformMatrix = values.currentTransformMatrix;\n          } else {\n            var keyToCurrentValue = 'current' + _propName.charAt(0).toUpperCase() + _propName.slice(1);\n            initialValues[_propName] = values[keyToCurrentValue];\n          }\n        }\n        return {\n          initialValues: initialValues,\n          animations: animations\n        };\n      };\n    }\n  }, {\n    key: \"buildProgressAnimation\",\n    value: function buildProgressAnimation() {\n      if (this._customProgressAnimation) {\n        this._progressAnimation = this._customProgressAnimation;\n        return;\n      }\n      this._progressAnimation = function (viewTag, values, progress) {\n        'worklet';\n\n        var newStyles = {};\n        for (var propertyName of supportedProps) {\n          if (propertyName === 'transform') {\n            var currentMatrix = values.currentTransformMatrix;\n            var targetMatrix = values.targetTransformMatrix;\n            var newMatrix = new Array(9);\n            for (var i = 0; i < 9; i++) {\n              newMatrix[i] = progress * (targetMatrix[i] - currentMatrix[i]) + currentMatrix[i];\n            }\n            newStyles.transformMatrix = newMatrix;\n          } else {\n            var PropertyName = propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n            var currentValue = values['current' + PropertyName];\n            var targetValue = values['target' + PropertyName];\n            newStyles[propertyName] = progress * (targetValue - currentValue) + currentValue;\n          }\n        }\n        _notifyAboutProgress(viewTag, newStyles, true);\n      };\n    }\n  }], [{\n    key: \"custom\",\n    value: function custom(customAnimationFactory) {\n      return new SharedTransition().custom(customAnimationFactory);\n    }\n  }, {\n    key: \"duration\",\n    value: function duration(_duration2) {\n      return new SharedTransition().duration(_duration2);\n    }\n  }, {\n    key: \"progressAnimation\",\n    value: function progressAnimation(progressAnimationCallback) {\n      return new SharedTransition().progressAnimation(progressAnimationCallback);\n    }\n  }, {\n    key: \"defaultTransitionType\",\n    value: function defaultTransitionType(transitionType) {\n      return new SharedTransition().defaultTransitionType(transitionType);\n    }\n  }]);\n  return SharedTransition;\n}();\n_defineProperty(SharedTransition, \"_progressTransitionManager\", new ProgressTransitionManager());","map":{"version":3,"names":["withTiming","LayoutAnimationType","SharedTransitionType","configureLayoutAnimations","ProgressTransitionManager","supportedProps","SharedTransition","_classCallCheck","_defineProperty","undefined","_createClass","key","value","custom","customAnimationFactory","_customAnimationFactory","progressAnimation","progressAnimationCallback","_customProgressAnimation","viewTag","values","progress","newStyles","_notifyAboutProgress","duration","_transitionDuration","defaultTransitionType","transitionType","_defaultTransitionType","registerTransition","sharedTransitionTag","transitionAnimation","getTransitionAnimation","getProgressAnimation","ANIMATION","PROGRESS_ANIMATION","layoutAnimationType","SHARED_ELEMENT_TRANSITION","SHARED_ELEMENT_TRANSITION_PROGRESS","_progressTransitionManager","addProgressAnimation","unregisterTransition","removeProgressAnimation","_animation","buildAnimation","_progressAnimation","buildProgressAnimation","animationFactory","transitionDuration","animations","initialValues","includes","Error","propName","matrix","targetTransformMatrix","transformMatrix","keyToTargetValue","charAt","toUpperCase","slice","currentTransformMatrix","keyToCurrentValue","propertyName","currentMatrix","targetMatrix","newMatrix","Array","i","PropertyName","currentValue","targetValue"],"sources":["C:\\Users\\Dani\\ProgramacionMovil\\ExamKids\\frontend\\examkids\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\sharedTransitions\\SharedTransition.ts"],"sourcesContent":["import { withTiming } from '../../animation';\nimport type {\n  SharedTransitionAnimationsFunction,\n  SharedTransitionAnimationsValues,\n  CustomProgressAnimation,\n  ProgressAnimation,\n} from '../animationBuilder/commonTypes';\nimport {\n  LayoutAnimationType,\n  SharedTransitionType,\n} from '../animationBuilder/commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport { configureLayoutAnimations } from '../../core';\nimport { ProgressTransitionManager } from './ProgressTransitionManager';\n\nconst supportedProps = [\n  'width',\n  'height',\n  'originX',\n  'originY',\n  'transform',\n  'borderRadius',\n];\n\ntype AnimationFactory = (\n  values: SharedTransitionAnimationsValues\n) => StyleProps;\n\nexport class SharedTransition {\n  private _customAnimationFactory: AnimationFactory | null = null;\n  private _animation: SharedTransitionAnimationsFunction | null = null;\n  private _transitionDuration = 500;\n  private _customProgressAnimation?: ProgressAnimation = undefined;\n  private _progressAnimation?: ProgressAnimation = undefined;\n  private _defaultTransitionType?: SharedTransitionType = undefined;\n  private static _progressTransitionManager = new ProgressTransitionManager();\n\n  public custom(customAnimationFactory: AnimationFactory): SharedTransition {\n    this._customAnimationFactory = customAnimationFactory;\n    return this;\n  }\n\n  public progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    this._customProgressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles = progressAnimationCallback(values, progress);\n      _notifyAboutProgress(viewTag, newStyles, true);\n    };\n    return this;\n  }\n\n  public duration(duration: number): SharedTransition {\n    this._transitionDuration = duration;\n    return this;\n  }\n\n  public defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    this._defaultTransitionType = transitionType;\n    return this;\n  }\n\n  public registerTransition(\n    viewTag: number,\n    sharedTransitionTag: string\n  ): void {\n    const transitionAnimation = this.getTransitionAnimation();\n    const progressAnimation = this.getProgressAnimation();\n    if (!this._defaultTransitionType) {\n      if (this._customAnimationFactory && !this._customProgressAnimation) {\n        this._defaultTransitionType = SharedTransitionType.ANIMATION;\n      } else {\n        this._defaultTransitionType = SharedTransitionType.PROGRESS_ANIMATION;\n      }\n    }\n    const layoutAnimationType =\n      this._defaultTransitionType === SharedTransitionType.ANIMATION\n        ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION\n        : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n    configureLayoutAnimations(\n      viewTag,\n      layoutAnimationType,\n      transitionAnimation,\n      sharedTransitionTag\n    );\n    SharedTransition._progressTransitionManager.addProgressAnimation(\n      viewTag,\n      progressAnimation\n    );\n  }\n\n  public unregisterTransition(viewTag: number): void {\n    SharedTransition._progressTransitionManager.removeProgressAnimation(\n      viewTag\n    );\n  }\n\n  private getTransitionAnimation(): SharedTransitionAnimationsFunction {\n    if (!this._animation) {\n      this.buildAnimation();\n    }\n    return this._animation!;\n  }\n\n  private getProgressAnimation(): ProgressAnimation {\n    if (!this._progressAnimation) {\n      this.buildProgressAnimation();\n    }\n    return this._progressAnimation!;\n  }\n\n  private buildAnimation() {\n    const animationFactory = this._customAnimationFactory;\n    const transitionDuration = this._transitionDuration;\n    this._animation = (values: SharedTransitionAnimationsValues) => {\n      'worklet';\n      let animations: {\n        [key: string]: any;\n      } = {};\n      const initialValues: {\n        [key: string]: any;\n      } = {};\n\n      if (animationFactory) {\n        animations = animationFactory(values);\n        for (const key in animations) {\n          if (!supportedProps.includes(key)) {\n            throw Error(`The prop '${key}' is not supported yet.`);\n          }\n        }\n      } else {\n        for (const propName of supportedProps) {\n          if (propName === 'transform') {\n            const matrix = values.targetTransformMatrix;\n            animations.transformMatrix = withTiming(matrix, {\n              duration: transitionDuration,\n            });\n          } else {\n            const keyToTargetValue =\n              'target' + propName.charAt(0).toUpperCase() + propName.slice(1);\n            animations[propName] = withTiming(values[keyToTargetValue], {\n              duration: transitionDuration,\n            });\n          }\n        }\n      }\n\n      for (const propName in animations) {\n        if (propName === 'transform') {\n          initialValues.transformMatrix = values.currentTransformMatrix;\n        } else {\n          const keyToCurrentValue =\n            'current' + propName.charAt(0).toUpperCase() + propName.slice(1);\n          initialValues[propName] = values[keyToCurrentValue];\n        }\n      }\n\n      return { initialValues, animations };\n    };\n  }\n\n  private buildProgressAnimation() {\n    if (this._customProgressAnimation) {\n      this._progressAnimation = this._customProgressAnimation;\n      return;\n    }\n    this._progressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles: { [key: string]: number | number[] } = {};\n      for (const propertyName of supportedProps) {\n        if (propertyName === 'transform') {\n          // this is not the perfect solution, but at this moment it just interpolates the whole\n          // matrix instead of interpolating scale, translate, rotate, etc. separately\n          const currentMatrix = values.currentTransformMatrix as number[];\n          const targetMatrix = values.targetTransformMatrix as number[];\n          const newMatrix = new Array(9);\n          for (let i = 0; i < 9; i++) {\n            newMatrix[i] =\n              progress * (targetMatrix[i] - currentMatrix[i]) +\n              currentMatrix[i];\n          }\n          newStyles.transformMatrix = newMatrix;\n        } else {\n          // PropertyName == propertyName with capitalized fist letter, (width -> Width)\n          const PropertyName =\n            propertyName.charAt(0).toUpperCase() + propertyName.slice(1);\n          const currentValue = values['current' + PropertyName] as number;\n          const targetValue = values['target' + PropertyName] as number;\n          newStyles[propertyName] =\n            progress * (targetValue - currentValue) + currentValue;\n        }\n      }\n      _notifyAboutProgress(viewTag, newStyles, true);\n    };\n  }\n\n  // static builder methods\n\n  public static custom(\n    customAnimationFactory: AnimationFactory\n  ): SharedTransition {\n    return new SharedTransition().custom(customAnimationFactory);\n  }\n\n  public static duration(duration: number): SharedTransition {\n    return new SharedTransition().duration(duration);\n  }\n\n  public static progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    return new SharedTransition().progressAnimation(progressAnimationCallback);\n  }\n\n  public static defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    return new SharedTransition().defaultTransitionType(transitionType);\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}