{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/st/Statistics\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport List from \"./components/diag/\";\nimport Name from \"./components/inf/Information\";\nimport ChatGPT from \"./components/conf/Configuration\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: '#fd7858',\n        tabBarInactiveTintColor: '#76768e'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \" \",\n        component: ProfileCard,\n        options: {\n          tabBarLabel: 'Diagnóstico',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"hospital-box-outline\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"list\",\n        component: List,\n        options: {\n          tabBarLabel: 'Información',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"information\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"name\",\n        component: Name,\n        options: {\n          tabBarLabel: 'Estadísticas',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"chart-bar\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"chatgpt\",\n        component: ChatGPT,\n        options: {\n          tabBarLabel: 'Configuración',\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n              size = _ref4.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"account-cog\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#DEE1E6'\n  }\n});","map":{"version":3,"names":["createBottomTabNavigator","ProfileCard","MaterialCommunityIcons","List","Name","ChatGPT","jsx","_jsx","jsxs","_jsxs","Tab","Navigation","View","style","styles","container","children","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","_ref3","_ref4","StyleSheet","create","flex","backgroundColor"],"sources":["C:/Users/Dani/ProgramacionMovil/ExamKids/frontend/examkids/src/Navigation.js"],"sourcesContent":["import { StyleSheet, View } from \"react-native\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/st/Statistics\";\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\"\nimport List from \"./components/diag/\";\nimport Name from \"./components/inf/Information\"\nimport ChatGPT from \"./components/conf/Configuration\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Navigation() {\n    return (\n        <View style={styles.container}>\n            <Tab.Navigator\n                screenOptions={{\n                    tabBarActiveTintColor: '#fd7858', // Color del ícono y etiqueta de la pestaña activa\n                    tabBarInactiveTintColor: '#76768e', // Color del ícono y etiqueta de la pestaña inactiva\n                }}\n            >\n                <Tab.Screen\n                    name=\" \"\n                    component={ProfileCard}\n                    options={{\n                        tabBarLabel: 'Diagnóstico',\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"hospital-box-outline\" color={color} size={size} />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"list\"\n                    component={List}\n                    options={{\n                        tabBarLabel: 'Información',\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"information\" color={color} size={size} />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"name\"\n                    component={Name}\n                    options={{\n                        tabBarLabel: 'Estadísticas',\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"chart-bar\" color={color} size={size} />\n                        ),\n                    }}\n                />\n                <Tab.Screen\n                    name=\"chatgpt\"\n                    component={ChatGPT}\n                    options={{\n                        tabBarLabel: 'Configuración',\n                        tabBarIcon: ({ color, size }) => (\n                            <MaterialCommunityIcons name=\"account-cog\" color={color} size={size} />\n                        ),\n                    }}\n                />\n            </Tab.Navigator>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#DEE1E6',\n    },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}