{"ast":null,"code":"import React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\";\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function Navigation() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: {\n        tabBarActiveTintColor: 'red',\n        tabBarInactiveTintColor: 'gray'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \" \",\n        component: ProfileCard,\n        options: {\n          tabBarLabel: 'Diagnóstico',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"hospital-box-outline\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"list\",\n        component: List,\n        options: {\n          tabBarLabel: 'Información',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"information\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"name\",\n        component: Name,\n        options: {\n          tabBarLabel: 'Estadísticas',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"chart-bar\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"chatgpt\",\n        component: ChatGPT,\n        options: {\n          tabBarLabel: 'Configuración',\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n              size = _ref4.size;\n            return _jsx(MaterialCommunityIcons, {\n              name: \"account-cog\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","View","createBottomTabNavigator","ProfileCard","MaterialCommunityIcons","List","Name","ChatGPT","jsx","_jsx","jsxs","_jsxs","Tab","Navigation","style","styles","container","children","Navigator","screenOptions","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","_ref3","_ref4","create","flex","backgroundColor"],"sources":["C:/Users/Dani/ProgramacionMovil/ExamKids/frontend/examkids/src/Navigation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet,  View  } from \"react-native\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\"\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\"\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default function Navigation() {\n  return (\n    <View style={styles.container}>\n      <Tab.Navigator\n        screenOptions={{\n          tabBarActiveTintColor: 'red', // Color del ícono y etiqueta de la pestaña activa\n          tabBarInactiveTintColor: 'gray', // Color del ícono y etiqueta de la pestaña inactiva\n        }}\n      >\n        <Tab.Screen\n          name=\" \"\n          component={ProfileCard}\n          options={{\n            tabBarLabel: 'Diagnóstico',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"hospital-box-outline\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"list\"\n          component={List}\n          options={{\n            tabBarLabel: 'Información',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"information\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"name\"\n          component={Name}\n          options={{\n            tabBarLabel: 'Estadísticas',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"chart-bar\" color={color} size={size} />\n            ),\n          }}\n        />\n        <Tab.Screen\n          name=\"chatgpt\"\n          component={ChatGPT}\n          options={{\n            tabBarLabel: 'Configuración',\n            tabBarIcon: ({ color, size }) => (\n              <MaterialCommunityIcons name=\"account-cog\" color={color} size={size} />\n            ),\n          }}\n        />\n      </Tab.Navigator>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'green', // Fondo de color verde para el componente de navegación con pestañas\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}