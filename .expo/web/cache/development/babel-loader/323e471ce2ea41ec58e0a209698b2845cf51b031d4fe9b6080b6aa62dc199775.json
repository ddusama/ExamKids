{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\";\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navigation = function Navigation() {\n  var _useState = useState('tomato'),\n    _useState2 = _slicedToArray(_useState, 2),\n    buttonColor = _useState2[0],\n    setButtonColor = _useState2[1];\n  var _useState3 = useState('white'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    textColor = _useState4[0],\n    setTextColor = _useState4[1];\n  var handleButtonClick = function handleButtonClick() {\n    setButtonColor('green');\n    setTextColor('black');\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(TouchableOpacity, {\n      style: [styles.button, {\n        backgroundColor: buttonColor\n      }],\n      onPress: handleButtonClick,\n      children: [_jsx(MaterialCommunityIcons, {\n        name: \"hospital-box-outline\",\n        style: styles.tabBarIcon,\n        color: \"white\",\n        size: 24\n      }), _jsx(Text, {\n        style: [styles.buttonText, {\n          color: textColor\n        }],\n        children: \"Diagn\\xF3stico\"\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button: {\n    flexDirection: 'row',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  buttonText: {\n    marginLeft: 5,\n    fontSize: 16\n  }\n});\nexport default Navigation;","map":{"version":3,"names":["createBottomTabNavigator","ProfileCard","MaterialCommunityIcons","List","Name","ChatGPT","jsx","_jsx","jsxs","_jsxs","Navigation","_useState","useState","_useState2","_slicedToArray","buttonColor","setButtonColor","_useState3","_useState4","textColor","setTextColor","handleButtonClick","View","style","styles","container","children","TouchableOpacity","button","backgroundColor","onPress","name","tabBarIcon","color","size","Text","buttonText","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","paddingVertical","paddingHorizontal","borderRadius","marginLeft","fontSize"],"sources":["C:/Users/Dani/ProgramacionMovil/ExamKids/frontend/examkids/src/Navigation.js"],"sourcesContent":["import { StyleSheet } from \"react-native\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileCard from \"./components/home/ProfileCard\";\nimport { MaterialCommunityIcons } from \"react-native-vector-icons\"\nimport List from \"./components/list/List\";\nimport Name from \"./components/name/Name\"\nimport ChatGPT from \"./components/chatgpt/ChatGPT\";\n\nconst Navigation = () => {\n    const [buttonColor, setButtonColor] = useState('tomato');\n    const [textColor, setTextColor] = useState('white');\n  \n    const handleButtonClick = () => {\n      // Cambiar el color del botón y el texto al hacer clic\n      setButtonColor('green');\n      setTextColor('black');\n    };\n  \n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={[styles.button, { backgroundColor: buttonColor }]}\n          onPress={handleButtonClick}\n        >\n          <MaterialCommunityIcons\n            name=\"hospital-box-outline\"\n            style={styles.tabBarIcon}\n            color=\"white\"\n            size={24}\n          />\n          <Text style={[styles.buttonText, { color: textColor }]}>Diagnóstico</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n    },\n    button: {\n      flexDirection: 'row',\n      paddingVertical: 10,\n      paddingHorizontal: 20,\n      borderRadius: 5,\n      alignItems: 'center',\n    },\n    buttonText: {\n      marginLeft: 5,\n      fontSize: 16,\n    },\n  });\n  \n  export default Navigation;"],"mappings":";;AACA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,OAAOC,WAAW;AAClB,SAASC,sBAAsB;AAC/B,OAAOC,IAAI;AACX,OAAOC,IAAI;AACX,OAAOC,OAAO;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACrB,IAAAC,SAAA,GAAsCC,QAAQ,CAAC,QAAQ,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAjDI,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAAI,UAAA,GAAkCL,QAAQ,CAAC,OAAO,CAAC;IAAAM,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA5CE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9B,IAAMG,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAE9BL,cAAc,CAAC,OAAO,CAAC;IACvBI,YAAY,CAAC,OAAO,CAAC;EACvB,CAAC;EAED,OACEb,IAAA,CAACe,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5BjB,KAAA,CAACkB,gBAAgB;MACfJ,KAAK,EAAE,CAACC,MAAM,CAACI,MAAM,EAAE;QAAEC,eAAe,EAAEd;MAAY,CAAC,CAAE;MACzDe,OAAO,EAAET,iBAAkB;MAAAK,QAAA,GAE3BnB,IAAA,CAACL,sBAAsB;QACrB6B,IAAI,EAAC,sBAAsB;QAC3BR,KAAK,EAAEC,MAAM,CAACQ,UAAW;QACzBC,KAAK,EAAC,OAAO;QACbC,IAAI,EAAE;MAAG,CACV,CAAC,EACF3B,IAAA,CAAC4B,IAAI;QAACZ,KAAK,EAAE,CAACC,MAAM,CAACY,UAAU,EAAE;UAAEH,KAAK,EAAEd;QAAU,CAAC,CAAE;QAAAO,QAAA,EAAC;MAAW,CAAM,CAAC;IAAA,CAC1D;EAAC,CACf,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDb,MAAM,EAAE;IACNc,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,CAAC;IACfJ,UAAU,EAAE;EACd,CAAC;EACDL,UAAU,EAAE;IACVU,UAAU,EAAE,CAAC;IACbC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,eAAerC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}